"""add key constraints for form keys, and save all job data in a json

Revision ID: 32e8f06b31d9
Revises: c6857cc1a119
Create Date: 2025-05-23 09:31:30.205519

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '32e8f06b31d9'
down_revision: Union[str, None] = 'c6857cc1a119'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('job', sa.Column('job_data', sa.JSON(), nullable=True))
    op.drop_column('job', 'experience_min')
    op.drop_column('job', 'is_staffing')
    op.drop_column('job', 'occupation_code')
    op.drop_column('job', 'experience_max')
    op.drop_column('job', 'salary_max')
    op.drop_column('job', 'salary_period')
    op.drop_column('job', 'salary_min')
    op.drop_column('job', 'locations')
    op.drop_column('job', 'currency')
    op.drop_column('job', 'remote')
    op.drop_column('job', 'education_requirements')
    op.drop_column('job', 'is_internship')
    op.drop_column('job', 'skills')
    op.drop_column('job', 'date_expired')
    op.drop_column('job', 'date_posted')
    op.drop_column('job', 'job_title')
    op.drop_column('job', 'full_time')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('job', sa.Column('full_time', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('job_title', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('job', sa.Column('date_posted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('date_expired', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('is_internship', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('education_requirements', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('remote', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('locations', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('salary_min', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('salary_period', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('salary_max', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('experience_max', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('occupation_code', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('job', sa.Column('is_staffing', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('experience_min', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_column('job', 'job_data')
    # ### end Alembic commands ###
