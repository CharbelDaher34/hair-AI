apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: recruitment-app
type: Opaque
data:
  POSTGRES_USER: Y2hhcmJlbA== # "charbel" base64 encoded
  POSTGRES_PASSWORD: Y2hhcmJlbA== # "charbel" base64 encoded
  # For backend user (if different and more restricted, otherwise backend can use above)
  APP_DB_USER: YXBwX3VzZXI= # "app_user" base64 encoded
  APP_DB_PASS: YQ==         # "a" base64 encoded
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: recruitment-app
spec:
  accessModes:
    - ReadWriteOnce # Suitable for a single database pod
  resources:
    requests:
      storage: 5Gi # Adjust size as needed
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-db
  namespace: recruitment-app
spec:
  serviceName: "postgres-db-service"
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: matching_db
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata # Ensure data is stored in the PVC path
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - charbel # Use the POSTGRES_USER from secret
                - -d
                - matching_db
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - charbel # Use the POSTGRES_USER from secret
                - -d
                - matching_db
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes: # This volume refers to the PVC
        - name: postgres-storage # This name must match volumeMounts.name
          persistentVolumeClaim:
            claimName: postgres-pvc # This must match the PVC metadata.name
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-db-service # This is the service name the backend will use
  namespace: recruitment-app
spec:
  ports:
    - port: 5432 # Port the service listens on
      targetPort: 5432 # Port on the pod
  selector:
    app: postgres-db
  type: ClusterIP # Internal service
